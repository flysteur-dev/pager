{"version":3,"sources":["Helpers/Db.js","Helpers/Constants.js","Components/Feed.js","Components/Feeds.js","Components/List.js","Components/Viewer.js","App.js","serviceWorker.js","index.js"],"names":["DbContext","React","createContext","db_feeds","PouchDB","db_feeds_items","PROXY_PATH","FAVICON_PROVIDER","Feed","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onFeedChange","listener","context","changes","since","live","include_docs","on","item","_","indexOf","state","unread","doc","_id","setState","filter","current","alert","loading","id","icon","title","uri","parser","Parser","parseURL","feed","newItems","items","forEach","date","isoDate","pubDate","replace","moment","ts","unix","push","guid","feedId","_this2","desc","contentSnippet","content","link","favorite","bulkDocs","result","ok","uniq","concat","toConsumableArray","map","loaded","console","error","_context","t0","cancel","react_default","a","createElement","onClick","className","length","src","alt","substring","Component","contextType","Feeds","handleChange","event","rss","target","value","toLowerCase","trim","handleAppForeground","lastupdate","Date","now","toFixed","feeds","closeFeed","document","getElementsByClassName","classList","add","addFeed","asyncToGenerator","regenerator_default","mark","_callee","info","base","wrap","prev","next","abrupt","test","sent","fetch","arrayBuffer","then","buffer","binary","slice","Uint8Array","b","String","fromCharCode","imageStr","window","btoa","put","t1","stop","onFeedLoad","addEventListener","removeEventListener","nextProps","class","process","type","ref","c","_input","onChange","placeholder","disabled","Components_Feed","key","List","openFeedList","remove","markAllAsRead","warn","showFavoriteItems","_callee2","favoriteItems","_context2","optionFavorite","oldItems","allDocs","rows","switchDisplayMode","load","_ref3","_callee3","e","_context3","preventDefault","openViewer","get","_x","_x2","apply","arguments","assign","_this3","emptyView","loadingView","markAsReadButton","orderedItems","sortBy","o","unreadItems","href","rel","fromNow","Viewer","handleBackButton","active","close","history","replaceState","share","navigator","text","url","el","style","position","left","body","appendChild","select","execCommand","removeChild","_rev","viewer","location","hash","format","dangerouslySetInnerHTML","__html","App","feedsItems","persistedItems","persistedFeeds","log","Components_Feeds","Components_List","Components_Viewer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","getElementById","URL","origin","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ec8adbc4.chunk.js","sourcesContent":["import React   from 'react';\nimport PouchDB from 'pouchdb';\n\nexport const DbContext = React.createContext({\n\tdb_feeds:       new PouchDB('pager_feeds'),\n\tdb_feeds_items: new PouchDB('pager_feeds_items')\n});","// During Development or without using the docker image\n// You can simply use \"https://cors-anywhere.herokuapp.com/\" as PROXY_PATH variable to get around CORS security.\nexport const PROXY_PATH       = 'https://cors-anywhere.herokuapp.com/';\n\nexport const FAVICON_PROVIDER = 'https://s2.googleusercontent.com/s2/favicons?domain_url=';","import _ from 'lodash';\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport { DbContext } from '../Helpers/Db';\nimport { PROXY_PATH } from '../Helpers/Constants';\nimport Parser from 'rss-parser';\n\nclass Feed extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.listener = null;\n\t\tthis.state    = {\n\t\t\tloading: true,\n\t\t\tid:      this.props.id,\n\t\t\ticon:    this.props.icon,\n\t\t\ttitle:   this.props.title,\n\t\t\turi:     this.props.uri,\n\t\t\tunread:  this.props.unread || []\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\t//Attach listner\n\t\tthis.onFeedChange();\n\n\t\tlet parser = new Parser();\n\t\tlet uri = `${PROXY_PATH}${this.state.uri}`;\n\n\t\ttry {\n\t\t\tlet feed     = await parser.parseURL(uri);\n\t\t\tlet newItems = [];\n\n\t\t\tfeed.items.forEach(item => {\n\n\t\t\t\tlet date = item.isoDate || (item.pubDate) ? item.pubDate.replace(/CET|CEST/gi, '') : moment();\n\t\t\t\tlet ts   = moment(date).unix();\n\n\t\t\t\tnewItems.push({\n\t\t\t\t\t_id:      item.guid || item.id,\n\t\t\t\t\tfeedId:   this.state.id,\n\t\t\t\t\ticon:     this.state.icon,\n\t\t\t\t\ttitle:    item.title,\n\t\t\t\t\tdesc:     item.contentSnippet,\n\t\t\t\t\tcontent:  item[\"content:encoded\"] || item.content,\n\t\t\t\t\tdate:     ts,\n\t\t\t\t\tlink:     item.link,\n\t\t\t\t\tunread:   true,\n\t\t\t\t\tfavorite: false,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t//Try to add new document\n\t\t\t//If document already exist coucheDB will fail with conflict\n\t\t\tlet result = await this.context.db_feeds_items.bulkDocs(newItems);\n\t\t\t//Keep only successful new insertion\n\t\t\tresult = result.filter(item => item.ok === true);\n\t\t\tthis.setState({ loading: false, unread: _.uniq([...this.state.unread, ...result.map(item => item.id)]) });\n\t\t\t//Notify parent feeds load\n\t\t\tthis.props.loaded(this.state);\n\t\t} catch(e) {\n\t\t\tconsole.error(`Unable to fetch feed: ${uri} reason: ${e}`);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.listener.cancel();\n\t\tthis.listener = null;\n\t}\n\n\tonFeedChange = () => {\n\t\t//Attach listener for new feed changes\n\t\tthis.listener = this.context.db_feeds_items.changes({\n\t\t\tsince: 'now',\n\t\t\tlive: true,\n\t\t\tinclude_docs: true\n\t\t}).on('change', (item) => {\n\n\t\t\t//Remove item from unread\n\t\t\tif (_.indexOf(this.state.unread, item.doc._id) !== -1 && item.doc.unread === false) {\n\t\t\t\tthis.setState({unread: this.state.unread.filter(current => current !== item.doc._id)})\n\t\t\t}\n\t\t});\n\t}\n\n\tfilter = () => {\n\t\t//TODO: Filter only this feed\n\t\talert(\"Not implemented.\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<li onClick={this.filter} title={this.state.title}>\n\t\t\t\t<div className=\"n\">{(this.state.loading) ? '...' : this.state.unread.length}</div>\n\t\t\t\t<div className=\"i\"><img src={this.state.icon} alt=\"-\" /></div>\n\t\t\t\t<div className=\"t\">{this.state.title.substring(0, 30)}</div>\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nFeed.contextType = DbContext;\nexport default Feed;","import React, { Component } from 'react';\nimport { DbContext } from '../Helpers/Db';\nimport { PROXY_PATH, FAVICON_PROVIDER } from '../Helpers/Constants';\nimport Parser from 'rss-parser';\nimport Feed from './Feed';\n\nclass Feeds extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.lastupdate = 0\n\t\tthis.state      = {\n\t\t\trss:     '',\n\t\t\tloading: false,\n\t\t\tloaded:  0,\n\t\t\tfeeds:   this.props.feeds,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"visibilitychange\", this.handleAppForeground);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"visibilitychange\", this.handleAppForeground)\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.feeds !== this.props.feeds) {\n\t\t\tthis.setState({ feeds: nextProps.feeds });\n\t\t}\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({ rss: event.target.value.toLowerCase().trim()});\n\t}\n\n\thandleAppForeground = (event) => {\n\t\t//Trigger automatic update on app foreground\n\t\t//Update only if lastupdate < 1 minute\n\t\t//User can still force update with pull-to-refresh\n\t\tif (this.lastupdate <= (Date.now() / 1000).toFixed() - 60) {\n\t\t\tlet feeds       = this.state.feeds;\n\t\t\tthis.lastupdate = (Date.now() / 1000).toFixed();\n\n\t\t\t//Force update\n\t\t\t//TODO: (0_') burk..\n\t\t\tthis.setState({ feeds: [] });\n\t\t\tthis.setState({ feeds });\n\t\t}\n\t}\n\n\tcloseFeed = () => {\n\t\t// Hide feeds list\n\t\tdocument.getElementsByClassName('App-Feeds')[0].classList.add(\"hide\");\n\t}\n\n\taddFeed = async () => {\n\t\t// Test feed validity\n\t\tif (this.state.rss === \"\") {\n\t\t\talert(\"Please add rss feed link first.\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (!/^(http|https):\\/\\//.test(this.state.rss)) {\n\t\t\talert(\"Missing http/https scheme.\");\n\t\t\treturn;\n\t\t}\n\n\t\t// Loader\n\t\tthis.setState({ loading: true });\n\n\t\tlet feed = {\n\t\t\t_id:   this.state.rss,\n\t\t\turi:   this.state.rss,\n\t\t\ttitle: this.state.rss,\n\t\t\ticon:  ''\n\t\t};\n\n\t\t//Trying to fetch xml feed\n\t\ttry {\n\t\t\tlet parser = new Parser();\n\t\t\tlet uri = `${PROXY_PATH}${this.state.rss}`;\n\n\t\t\tlet info = await parser.parseURL(uri);\n\t\t\tif (info.title) {\n\t\t\t\t//Add feed title\n\t\t\t\tfeed.title = info.title;\n\t\t\t}\n\n\t\t\t//Use google as favicon provider (o_O)\n\t\t\tlet base = info.link || this.state.rss;\n\t\t\tlet icon = await fetch(`${PROXY_PATH}${FAVICON_PROVIDER}${base}`);\n\t\t\tawait icon.arrayBuffer().then((buffer) => {\n\t\t\t\t//Read stream\n\t\t\t\tvar binary     = '';\n\t\t\t\tvar bytes      = [].slice.call(new Uint8Array(buffer));\n\t\t\t\t\tbytes.forEach((b) => binary += String.fromCharCode(b));\n\t\t\t\tvar imageStr   = window.btoa(binary);\n\n\t\t\t\t//Save icon as base64\n\t\t\t\tfeed.icon = `data:image/png;base64,${imageStr}`;\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tthis.setState({ loading: false });\n\t\t\tconsole.error(`Unable to add feed: ${this.state.rss} reason: ${e}`);\n\t\t\talert(\"Ooops something goes wrong..\");\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.context.db_feeds.put(feed);\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\trss:     '',\n\t\t\t\tfeeds:   [...this.state.feeds, ...[feed]]\n\t\t\t});\n\t\t} catch(e) {\n\t\t\tthis.setState({ loading: false });\n\t\t\tconsole.error(`Unable to add feed: ${this.state.rss} reason: ${e}`);\n\t\t}\n\t}\n\n\tonFeedLoad = () => {\n\t\t// Listening feed load\n\t\tthis.setState({ loaded: this.state.loaded + 1 });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App-Feeds-Container\">\n\t\t\t\t<div className=\"App-Feeds-Loader\">\n\t\t\t\t\t{ this.state.feeds.length !== this.state.loaded && <div class=\"loader\"></div> }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"App-Feeds hide\">\n\t\t\t\t\t<h1>\n\t\t\t\t\t\t<img alt=\"pager\" src={process.env.PUBLIC_URL + '/favicon.png'} />\n\t\t\t\t\t\t<span className=\"App-Feeds-Toggle\" onClick={this.closeFeed}>&#10005;</span>\n\t\t\t\t\t</h1>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"App-Feeds-Input\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={c => (this._input = c)}\n\t\t\t\t\t\tvalue={this.state.rss}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder=\"Add rss feed link here..\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t{this.state.loading ? (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tclassName=\"App-Feeds-Add\">\n\t\t\t\t\t\t\tLOADING...\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"App-Feeds-Add\"\n\t\t\t\t\t\t\tonClick={this.addFeed}>\n\t\t\t\t\t\t\tADD (+)\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.state.feeds.map((feed) => (\n\t\t\t\t\t\t\t<Feed key={feed._id} id={feed._id} icon={feed.icon} title={feed.title} uri={feed.uri} unread={feed.unread} loaded={this.onFeedLoad} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nFeeds.contextType = DbContext;\nexport default Feeds;","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { DbContext } from '../Helpers/Db';\n\nclass List extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.listener = null;\n\t\tthis.state    = {\n\t\t\tloading: true,\n\t\t\titems:   this.props.items,\n\n\t\t\t//Is option is activated\n\t\t\toptionFavorite: false\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t//Attach listener for new feed changes\n\t\tthis.listener = this.context.db_feeds_items.changes({\n\t\t\tsince:        'now',\n\t\t\tlive:         true,\n\t\t\tinclude_docs: true\n\t\t}).on('change', (item) => {\n\t\t\t//TODO: Improve mark as read should not trigger full render\n\n\t\t\t//Is this item already exist\n\t\t\tlet isExist = this.state.items.filter(current => current._id === item.doc._id);\n\t\t\tif (isExist.length > 0) {\n\t\t\t\t//Update existing item\n\t\t\t\tthis.setState({ items: this.state.items.map(current => (\n\t\t\t\t\tcurrent._id === item.doc._id ? Object.assign({}, current, item.doc) : current\n\t\t\t\t))});\n\t\t\t} else {\n\t\t\t\t//Add new item to feed list\n\t\t\t\tthis.setState({ items: [...this.state.items, ...[item.doc]] });\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.listener.cancel();\n\t\tthis.listener = null;\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.items !== this.props.items) {\n\t\t\tthis.setState({ loading: false, items: nextProps.items });\n\t\t}\n\t}\n\n\topenFeedList = () => {\n\t\t//Only mobile\n\t\t//Open left panel to manage feeds\n\t\tdocument.getElementsByClassName('App-Feeds')[0].classList.remove(\"hide\");\n\t}\n\n\t//Mark all items as read\n\tmarkAllAsRead = async () => {\n\t\ttry {\n\t\t\tlet items = this.state.items;\n\t\t\titems.map((item) => { item.unread = false; })\n\n\t\t\t//Bulk update\n\t\t\tawait this.context.db_feeds_items.bulkDocs(items);\n\t\t} catch (e) {\n\t\t\tconsole.warn(`Unable to mark all as read, reason: ${e}`);\n\t\t}\n\t}\n\n\t//Show only favorite items\n\t//Can be used as read it later feature\n\tshowFavoriteItems = async () => {\n\t\tthis.setState({ loading: true, items: [], optionFavorite: !this.state.optionFavorite });\n\n\t\tif (this.state.optionFavorite === false) {\n\t\t\t//Storing old state\n\t\t\tthis.oldItems = this.state.items;\n\n\t\t\t//Fetching favorite items\n\t\t\tlet favoriteItems = await this.context.db_feeds_items.allDocs({ include_docs: true });\n\t\t\tfavoriteItems = favoriteItems.rows.filter((item) => item.doc.favorite === true);\n\t\t\tfavoriteItems = favoriteItems.map(item => item.doc);\n\n\t\t\tthis.setState({ loading: false, items: favoriteItems });\n\t\t} else {\n\t\t\t//Restoring old state\n\t\t\tthis.setState({ loading: false, items: this.oldItems });\n\t\t\tdelete this.oldItems;\n\t\t}\n\t}\n\n\t//TODO: Switch display mode\n\t//Compact - Full\n\tswitchDisplayMode = () => {\n\t\talert(\"Display mode is not implemented yet.\");\n\t\treturn false;\n\t}\n\n\t// Open link target in a new tab or inside the embeded viewer\n\tload = async (e, item) => {\n\t\t//Dismiss default action and open it in embeded viewer\n\t\te.preventDefault();\n\t\tthis.props.openViewer(item);\n\n\t\ttry {\n\t\t\t//Mark as read\n\t\t\tvar item = await this.context.db_feeds_items.get(item._id);\n\t\t\t\titem.unread = false;\n\n\t\t\tawait this.context.db_feeds_items.put(item);\n\t\t} catch(e) {\n\t\t\tconsole.warn(`Unable to mark as read item: ${item._id} reason: ${e}`);\n\t\t}\n\t}\n\n\trender() {\n\t\tlet emptyView = (\n\t\t\t<div className=\"App-List-Empty\">\n\t\t\t\t<h1>(o_O)</h1>\n\t\t\t\t<p>There is nothing to read right now..</p>\n\t\t\t</div>\n\t\t);\n\t\tlet loadingView = (\n\t\t\t<div className=\"App-List-Empty\">\n\t\t\t\t<p>loading...</p>\n\t\t\t</div>\n\t\t);\n\t\tlet markAsReadButton = (\n\t\t\t<div className=\"App-List-Mark-As-Read-Button\" onClick={this.markAllAsRead}>\n\t\t\t\t<p>MARK ALL AS READ</p>\n\t\t\t</div>\n\t\t);\n\n\n\t\t//Order by date DESC\n\t\tlet orderedItems = _.sortBy(this.state.items, [(o) => { return -o.date }]);\n\n\t\t//Unread items\n\t\tlet unreadItems  = this.state.items.filter(item => item.unread === true);\n\n\t\treturn (\n\t\t\t<div className=\"App-List\">\n\t\t\t\t<div className=\"App-List-Options\">\n\t\t\t\t\t<button onClick={this.openFeedList} className=\"App-List-Options-Open-Feeds\">Feeds</button>\n\t\t\t\t\t<button onClick={this.showFavoriteItems} title=\"Show only favorites\" className={this.state.optionFavorite ? 'active' : ''}>★</button>\n\t\t\t\t\t<button onClick={this.switchDisplayMode} title=\"Switch to compact view\">☷</button>\n\t\t\t\t</div>\n\t\t\t\t<ul>\n\t\t\t\t\t{orderedItems.map((item) => (\n\t\t\t\t\t\t<a key={item._id} href={item.link} onClick={(e) => this.load(e, item)} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<li className={item.unread ? 'unread' : ''}>\n\t\t\t\t\t\t\t\t<div className=\"i\"><img alt=\"icon\" src={item.icon} /></div>\n\t\t\t\t\t\t\t\t<div className=\"ts\">{moment.unix(item.date).fromNow(true)}</div>\n\t\t\t\t\t\t\t\t<div className=\"t\">{(item.title) ? item.title.substring(0, 150) : ''}</div>\n\t\t\t\t\t\t\t\t<div className=\"d\">{(item.desc) ? item.desc.substring(0, 180) : ''}...</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\n\t\t\t\t{(this.state.loading === true) && loadingView}\n\t\t\t\t{(this.state.loading === false && orderedItems.length === 0) && emptyView}\n\t\t\t\t{(unreadItems.length > 0) && markAsReadButton}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nList.contextType = DbContext;\nexport default List;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { DbContext } from '../Helpers/Db';\n\nclass Viewer extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t_id:      null,\n\t\t\t_rev:     null,\n\t\t\ticon:     null,\n\t\t\ttitle:    null,\n\t\t\tdate:     null,\n\t\t\tcontent:  null,\n\t\t\tlink:     null,\n\t\t\tfavorite: false,\n\t\t\tactive:   false\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"popstate\", this.handleBackButton);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"popstate\", this.handleBackButton)\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tlet viewer = nextProps.viewer;\n\t\tif (viewer) {\n\t\t\tthis.setState({\n\t\t\t\t_id:      viewer._id,\n\t\t\t\t_rev:     viewer._rev,\n\t\t\t\ticon:     viewer.icon,\n\t\t\t\ttitle:    viewer.title,\n\t\t\t\tdate:     viewer.date,\n\t\t\t\tcontent:  viewer.content,\n\t\t\t\tlink:     viewer.link,\n\t\t\t\tfavorite: viewer.favorite || false,\n\t\t\t\tactive:   true\n\t\t\t});\n\n\t\t\t//Updating history hash\n\t\t\twindow.location.hash = viewer._rev;\n\t\t}\n\t}\n\n\thandleBackButton = () => {\n\t\t//Handle back button then close viewer\n\t\tif (this.state.active) {\n\t\t\tthis.close();\n\t\t}\n\t}\n\n\tclose = () => {\n\t\t//Close and unreference content\n\t\t//Activity inside the embedded viewer will be destroy ex: youtube player..\n\t\tthis.setState({ active: false, content: null });\n\t\twindow.history.replaceState(null, null, ' ');\n\t}\n\n\tfavorite = async () => {\n\t\ttry {\n\t\t\t//Toggle favorite\n\t\t\tvar item = await this.context.db_feeds_items.get(this.state._id);\n\t\t\titem.favorite = !this.state.favorite;\n\n\t\t\tawait this.context.db_feeds_items.put(item);\n\t\t\tthis.setState({ favorite: item.favorite });\n\t\t} catch (e) {\n\t\t\tconsole.warn(`Unable to toggle favorite item: ${this.state._id} reason: ${e}`);\n\t\t}\n\t}\n\n\tshare = () => {\n\t\tif (navigator && navigator.share) {\n\t\t\tnavigator.share({\n\t\t\t\ttitle: this.state.title,\n\t\t\t\ttext:  this.state.title,\n\t\t\t\turl:   this.state.link,\n\t\t\t});\n\t\t} else {\n\t\t\t//If web share is not available\n\t\t\t//Copy link to clipboard\n\t\t\tconst el = document.createElement('textarea');\n\t\t\tel.value = this.state.link;\n\t\t\tel.style.position = 'absolute';\n\t\t\tel.style.left = '-9999px';\n\t\t\tdocument.body.appendChild(el);\n\t\t\tel.select();\n\t\t\tdocument.execCommand('copy');\n\t\t\tdocument.body.removeChild(el);\n\t\t\talert(\"Copied to clipboard!\");\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.state.active ? 'App-Viewer active' : 'App-Viewer'}>\n\t\t\t\t<div className=\"App-Viewer-Options\">\n\t\t\t\t\t<button className=\"App-Viewer-Options-Close\" onClick={this.close}>&#10005;</button>\n\t\t\t\t\t<a\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref={this.state.link}\n\t\t\t\t\t\tonClick={this.close}>\n\t\t\t\t\t<button title=\"Open to new tab\">&#8505;</button></a>\n\t\t\t\t\t<button title=\"Share link\" onClick={this.share}>&#9741;</button>\n\t\t\t\t\t<button title=\"Add to favorite\" onClick={this.favorite}>{this.state.favorite ? '★' : '☆'}</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"App-Viewer-Title\">\n\t\t\t\t\t<h1><img alt=\"icon\" src={this.state.icon} /> {this.state.title}</h1>\n\t\t\t\t\t<p>{moment.unix(this.state.date).format(\"LLLL\")}</p>\n\t\t\t\t</div>\n\n\t\t\t\t{ /* TODO: find safer way.. */}\n\t\t\t\t<div className=\"App-Viewer-Content\" dangerouslySetInnerHTML={{ __html: this.state.content }} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nViewer.contextType = DbContext;\nexport default Viewer;","import React, { Component } from 'react';\nimport { DbContext } from './Helpers/Db';\nimport './App.scss';\n\n//Components\nimport Feeds  from './Components/Feeds';\nimport List   from './Components/List';\nimport Viewer from './Components/Viewer';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tloading:    true,\n\t\t\tviewer:     null,\n\t\t\tfeeds:      [ ],\n\t\t\tfeedsItems: [ ]\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\t//Initialize persisted feeds items\n\t\tlet persistedItems = await this.context.db_feeds_items.allDocs({ include_docs: true });\n\t\t\tpersistedItems = persistedItems.rows.filter((item) => item.doc.unread === true);\n\t\t\tpersistedItems = persistedItems.map(item => item.doc);\n\n\t\t//Initialize persisted feeds\n\t\tlet persistedFeeds = await this.context.db_feeds.allDocs({ include_docs: true });\n\t\t\tpersistedFeeds = persistedFeeds.rows.map(feed => {\n\t\t\t\tfeed.doc.unread = persistedItems.filter((item) => item.feedId === feed.id);\n\t\t\t\tfeed.doc.unread = feed.doc.unread.map(item => item._id);\n\n\t\t\t\tconsole.log(`Feed ${feed.id} has ${feed.doc.unread.length} unread.`);\n\t\t\t\treturn feed.doc;\n\t\t\t});\n\n\t\tthis.setState({\n\t\t\tloading:    false,\n\t\t\tfeeds:      [...persistedFeeds],\n\t\t\tfeedsItems: [...persistedItems]\n\t\t});\n\t}\n\n\topenViewer = (item) => {\n\t\tthis.setState({ viewer: item });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Feeds  feeds={this.state.feeds} />\n\t\t\t\t<List   items={this.state.feedsItems} openViewer={this.openViewer} />\n\t\t\t\t<Viewer viewer={this.state.viewer} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nApp.contextType = DbContext;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}