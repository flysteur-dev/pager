{"version":3,"sources":["Helpers/Db.js","Helpers/Constants.js","Components/Feed.js","Components/Feeds.js","Components/List.js","Components/Viewer.js","App.js","serviceWorker.js","index.js"],"names":["DbContext","React","createContext","db_feeds","PouchDB","db_feeds_items","PROXY_PATH","FAVICON_PROVIDER","Feed","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onFeedChange","listener","context","changes","since","live","include_docs","on","item","_","indexOf","state","unread","doc","_id","setState","filter","current","alert","loading","id","icon","title","uri","parser","Parser","parseURL","feed","newItems","items","forEach","date","isoDate","pubDate","replace","moment","ts","unix","push","guid","feedId","_this2","desc","contentSnippet","content","link","bulkDocs","result","ok","uniq","concat","toConsumableArray","map","console","error","_context","t0","cancel","react_default","a","createElement","onClick","className","length","src","alt","substring","Component","contextType","Feeds","handleChange","event","rss","target","value","toLowerCase","trim","handleAppForeground","lastupdate","Date","now","toFixed","feeds","closeFeed","document","getElementsByClassName","classList","add","addFeed","asyncToGenerator","regenerator_default","mark","_callee","info","base","wrap","prev","next","abrupt","test","sent","fetch","arrayBuffer","then","buffer","binary","slice","Uint8Array","b","String","fromCharCode","imageStr","window","btoa","put","t1","stop","addEventListener","removeEventListener","nextProps","process","type","ref","c","_input","onChange","placeholder","disabled","Components_Feed","key","List","openFeedList","remove","markAllAsRead","warn","load","_ref2","_callee2","e","_context2","preventDefault","openViewer","get","_x","_x2","apply","arguments","assign","_this3","emptyView","loadingView","markAsReadButton","orderedItems","sortBy","o","unreadItems","href","rel","fromNow","Viewer","close","active","favorite","share","_rev","viewer","format","dangerouslySetInnerHTML","__html","App","feedsItems","allDocs","persistedItems","rows","persistedFeeds","log","Components_Feeds","Components_List","Components_Viewer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","getElementById","URL","origin","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8aee95e0.chunk.js","sourcesContent":["import React   from 'react';\nimport PouchDB from 'pouchdb';\n\nexport const DbContext = React.createContext({\n\tdb_feeds:       new PouchDB('pager_feeds'),\n\tdb_feeds_items: new PouchDB('pager_feeds_items')\n});","// During Development or without using the docker image\n// You can simply use \"https://cors-anywhere.herokuapp.com/\" as PROXY_PATH variable to get around CORS security.\nexport const PROXY_PATH       = 'https://cors-anywhere.herokuapp.com/';\n\nexport const FAVICON_PROVIDER = 'https://s2.googleusercontent.com/s2/favicons?domain_url=';","import _ from 'lodash';\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport { DbContext } from '../Helpers/Db';\nimport { PROXY_PATH } from '../Helpers/Constants';\nimport Parser from 'rss-parser';\n\nclass Feed extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.listener = null;\n\t\tthis.state    = {\n\t\t\tloading: true,\n\t\t\tid:      this.props.id,\n\t\t\ticon:    this.props.icon,\n\t\t\ttitle:   this.props.title,\n\t\t\turi:     this.props.uri,\n\t\t\tunread:  this.props.unread || []\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\t//Attach listner\n\t\tthis.onFeedChange();\n\n\t\tlet parser = new Parser();\n\t\tlet uri = `${PROXY_PATH}${this.state.uri}`;\n\n\t\ttry {\n\t\t\tlet feed     = await parser.parseURL(uri);\n\t\t\tlet newItems = [];\n\n\t\t\tfeed.items.forEach(item => {\n\n\t\t\t\tlet date = item.isoDate || (item.pubDate) ? item.pubDate.replace(/CET|CEST/gi, '') : moment();\n\t\t\t\tlet ts   = moment(date).unix();\n\n\t\t\t\tnewItems.push({\n\t\t\t\t\t_id:     item.guid || item.id,\n\t\t\t\t\tfeedId:  this.state.id,\n\t\t\t\t\ticon:    this.state.icon,\n\t\t\t\t\ttitle:   item.title,\n\t\t\t\t\tdesc:    item.contentSnippet,\n\t\t\t\t\tcontent: item[\"content:encoded\"] || item.content,\n\t\t\t\t\tdate:    ts,\n\t\t\t\t\tlink:    item.link,\n\t\t\t\t\tunread:  true\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t//Try to add new document\n\t\t\t//If document already exist coucheDB will fail with conflict\n\t\t\tlet result = await this.context.db_feeds_items.bulkDocs(newItems);\n\t\t\t//Keep only successful new insertion\n\t\t\tresult = result.filter(item => item.ok === true);\n\t\t\tthis.setState({ loading: false, unread: _.uniq([...this.state.unread, ...result.map(item => item.id)]) });\n\t\t} catch(e) {\n\t\t\tconsole.error(`Unable to fetch feed: ${uri} reason: ${e}`);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.listener.cancel();\n\t\tthis.listener = null;\n\t}\n\n\tonFeedChange = () => {\n\t\t//Attach listener for new feed changes\n\t\tthis.listener = this.context.db_feeds_items.changes({\n\t\t\tsince: 'now',\n\t\t\tlive: true,\n\t\t\tinclude_docs: true\n\t\t}).on('change', (item) => {\n\n\t\t\t//Remove item from unread\n\t\t\tif (_.indexOf(this.state.unread, item.doc._id) !== -1 && item.doc.unread === false) {\n\t\t\t\tthis.setState({unread: this.state.unread.filter(current => current !== item.doc._id)})\n\t\t\t}\n\t\t});\n\t}\n\n\tfilter = () => {\n\t\t//TODO: Filter only this feed\n\t\talert(\"Not implemented.\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<li onClick={this.filter} title={this.state.title}>\n\t\t\t\t<div className=\"n\">{(this.state.loading) ? '...' : this.state.unread.length}</div>\n\t\t\t\t<div className=\"i\"><img src={this.state.icon} alt=\"-\" /></div>\n\t\t\t\t<div className=\"t\">{this.state.title.substring(0, 30)}</div>\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nFeed.contextType = DbContext;\nexport default Feed;","import React, { Component } from 'react';\nimport { DbContext } from '../Helpers/Db';\nimport { PROXY_PATH, FAVICON_PROVIDER } from '../Helpers/Constants';\nimport Parser from 'rss-parser';\nimport Feed from './Feed';\n\nclass Feeds extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.lastupdate = 0\n\t\tthis.state      = {\n\t\t\trss:     '',\n\t\t\tloading: false,\n\t\t\tfeeds:   this.props.feeds,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"visibilitychange\", this.handleAppForeground);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"visibilitychange\", this.handleAppForeground)\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.feeds !== this.props.feeds) {\n\t\t\tthis.setState({ feeds: nextProps.feeds });\n\t\t}\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({ rss: event.target.value.toLowerCase().trim()});\n\t}\n\n\thandleAppForeground = (event) => {\n\t\t//Trigger automatic update on app foreground\n\t\t//Update only if lastupdate < 1 minute\n\t\t//User can still force update with pull-to-refresh\n\t\tif (this.lastupdate <= (Date.now() / 1000).toFixed() - 60) {\n\t\t\tlet feeds       = this.state.feeds;\n\t\t\tthis.lastupdate = (Date.now() / 1000).toFixed();\n\n\t\t\t//Force update\n\t\t\t//TODO: (0_') burk..\n\t\t\tthis.setState({ feeds: [] });\n\t\t\tthis.setState({ feeds });\n\t\t}\n\t}\n\n\tcloseFeed = () => {\n\t\t// Hide feeds list\n\t\tdocument.getElementsByClassName('App-Feeds')[0].classList.add(\"hide\");\n\t}\n\n\taddFeed = async () => {\n\t\t// Test feed validity\n\t\tif (this.state.rss === \"\") {\n\t\t\talert(\"Please add rss feed link first.\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (!/^(http|https):\\/\\//.test(this.state.rss)) {\n\t\t\talert(\"Missing http/https scheme.\");\n\t\t\treturn;\n\t\t}\n\n\t\t// Loader\n\t\tthis.setState({ loading: true });\n\n\t\tlet feed = {\n\t\t\t_id:   this.state.rss,\n\t\t\turi:   this.state.rss,\n\t\t\ttitle: this.state.rss,\n\t\t\ticon:  ''\n\t\t};\n\n\t\t//Trying to fetch xml feed\n\t\ttry {\n\t\t\tlet parser = new Parser();\n\t\t\tlet uri = `${PROXY_PATH}${this.state.rss}`;\n\n\t\t\tlet info = await parser.parseURL(uri);\n\t\t\tif (info.title) {\n\t\t\t\t//Add feed title\n\t\t\t\tfeed.title = info.title;\n\t\t\t}\n\n\t\t\t//Use google as favicon provider (o_O)\n\t\t\tlet base = info.link || this.state.rss;\n\t\t\tlet icon = await fetch(`${PROXY_PATH}${FAVICON_PROVIDER}${base}`);\n\t\t\tawait icon.arrayBuffer().then((buffer) => {\n\t\t\t\t//Read stream\n\t\t\t\tvar binary     = '';\n\t\t\t\tvar bytes      = [].slice.call(new Uint8Array(buffer));\n\t\t\t\t\tbytes.forEach((b) => binary += String.fromCharCode(b));\n\t\t\t\tvar imageStr   = window.btoa(binary);\n\n\t\t\t\t//Save icon as base64\n\t\t\t\tfeed.icon = `data:image/png;base64,${imageStr}`;\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tthis.setState({ loading: false });\n\t\t\tconsole.error(`Unable to add feed: ${this.state.rss} reason: ${e}`);\n\t\t\talert(\"Ooops something goes wrong..\");\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.context.db_feeds.put(feed);\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\trss:     '',\n\t\t\t\tfeeds:   [...this.state.feeds, ...[feed]]\n\t\t\t});\n\t\t} catch(e) {\n\t\t\tthis.setState({ loading: false });\n\t\t\tconsole.error(`Unable to add feed: ${this.state.rss} reason: ${e}`);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App-Feeds hide\">\n\t\t\t\t<h1><img src={process.env.PUBLIC_URL + '/favicon.png' } /> <span className=\"App-Feeds-Toggle\" onClick={this.closeFeed}>x</span></h1>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"App-Feeds-Input\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={c => (this._input = c)}\n\t\t\t\t\tvalue={this.state.rss}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tplaceholder=\"Add rss feed link here..\"\n\t\t\t\t/>\n\n\t\t\t\t{this.state.loading ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\tclassName=\"App-Feeds-Add\">\n\t\t\t\t\t\tLOADING...\n\t\t\t\t\t</button>\n\t\t\t\t) : (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"App-Feeds-Add\"\n\t\t\t\t\t\tonClick={this.addFeed}>\n\t\t\t\t\t\tADD (+)\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\n\t\t\t\t<ul>\n\t\t\t\t\t{this.state.feeds.map((feed) => (\n\t\t\t\t\t\t<Feed key={feed._id} id={feed._id} icon={feed.icon} title={feed.title} uri={feed.uri} unread={feed.unread} />\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nFeeds.contextType = DbContext;\nexport default Feeds;","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { DbContext } from '../Helpers/Db';\n\nclass List extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.listener = null;\n\t\tthis.state    = {\n\t\t\tloading: true,\n\t\t\titems:   this.props.items\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t//Attach listener for new feed changes\n\t\tthis.listener = this.context.db_feeds_items.changes({\n\t\t\tsince:        'now',\n\t\t\tlive:         true,\n\t\t\tinclude_docs: true\n\t\t}).on('change', (item) => {\n\t\t\t//TODO: Improve mark as read should not trigger full render\n\n\t\t\t//Is this item already exist\n\t\t\tlet isExist = this.state.items.filter(current => current._id === item.doc._id);\n\t\t\tif (isExist.length > 0) {\n\t\t\t\t//Update existing item\n\t\t\t\tthis.setState({ items: this.state.items.map(current => (\n\t\t\t\t\tcurrent._id === item.doc._id ? Object.assign({}, current, item.doc) : current\n\t\t\t\t))});\n\t\t\t} else {\n\t\t\t\t//Add new item to feed list\n\t\t\t\tthis.setState({ items: [...this.state.items, ...[item.doc]] });\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.listener.cancel();\n\t\tthis.listener = null;\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.items !== this.props.items) {\n\t\t\tthis.setState({ loading: false, items: nextProps.items });\n\t\t}\n\t}\n\n\topenFeedList = () => {\n\t\t//Only mobile\n\t\t//Open left panel to manage feeds\n\t\tdocument.getElementsByClassName('App-Feeds')[0].classList.remove(\"hide\");\n\t}\n\n\tmarkAllAsRead = async () => {\n\t\ttry {\n\t\t\t//Mark all items as read\n\t\t\tlet items = this.state.items;\n\t\t\titems.map((item) => { item.unread = false; })\n\n\t\t\t//Bulk update\n\t\t\tawait this.context.db_feeds_items.bulkDocs(items);\n\t\t} catch (e) {\n\t\t\tconsole.warn(`Unable to mark all as read, reason: ${e}`);\n\t\t}\n\t}\n\n\t// Open link target in a new tab or inside the embeded viewer\n\tload = async (e, item) => {\n\t\t//Dismiss default action and open it in embeded viewer\n\t\te.preventDefault();\n\t\tthis.props.openViewer(item);\n\n\t\ttry {\n\t\t\t//Mark as read\n\t\t\tvar item = await this.context.db_feeds_items.get(item._id);\n\t\t\t\titem.unread = false;\n\n\t\t\tawait this.context.db_feeds_items.put(item);\n\t\t} catch(e) {\n\t\t\tconsole.warn(`Unable to mark as read item: ${item._id} reason: ${e}`);\n\t\t}\n\t}\n\n\trender() {\n\t\tlet emptyView = (\n\t\t\t<div className=\"App-List-Empty\">\n\t\t\t\t<h1>(o_O)</h1>\n\t\t\t\t<p>There is nothing to read right now..</p>\n\t\t\t</div>\n\t\t);\n\t\tlet loadingView = (\n\t\t\t<div className=\"App-List-Empty\">\n\t\t\t\t<p>loading...</p>\n\t\t\t</div>\n\t\t);\n\t\tlet markAsReadButton = (\n\t\t\t<div className=\"App-List-Mark-As-Read-Button\" onClick={this.markAllAsRead}>\n\t\t\t\t<p>MARK ALL AS READ</p>\n\t\t\t</div>\n\t\t);\n\n\n\t\t//Order by date DESC\n\t\tlet orderedItems = _.sortBy(this.state.items, [(o) => { return -o.date }]);\n\n\t\t//Unread items\n\t\tlet unreadItems  = this.state.items.filter(item => item.unread === true);\n\n\t\treturn (\n\t\t\t<div className=\"App-List\">\n\t\t\t\t<div className=\"App-List-Options\">\n\t\t\t\t\t<button onClick={this.openFeedList}>Feeds</button>\n\t\t\t\t</div>\n\t\t\t\t<ul>\n\t\t\t\t\t{orderedItems.map((item) => (\n\t\t\t\t\t\t<a key={item._id} href={item.link} onClick={(e) => this.load(e, item)} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<li className={item.unread ? 'unread' : ''}>\n\t\t\t\t\t\t\t\t<div className=\"i\"><img src={item.icon} /></div>\n\t\t\t\t\t\t\t\t<div className=\"ts\">{moment.unix(item.date).fromNow(true)}</div>\n\t\t\t\t\t\t\t\t<div className=\"t\">{(item.title) ? item.title.substring(0, 150) : ''}</div>\n\t\t\t\t\t\t\t\t<div className=\"d\">{(item.desc) ? item.desc.substring(0, 180) : ''}...</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\n\t\t\t\t{(this.state.loading === true) && loadingView}\n\t\t\t\t{(this.state.loading === false && orderedItems.length === 0) && emptyView}\n\t\t\t\t{(unreadItems.length > 0) && markAsReadButton}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nList.contextType = DbContext;\nexport default List;","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Viewer extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t_id:     null,\n\t\t\t_rev:    null,\n\t\t\ticon:    null,\n\t\t\ttitle:   null,\n\t\t\tdate:    null,\n\t\t\tcontent: null,\n\t\t\tlink:    null,\n\t\t\tactive:  false\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tlet viewer = nextProps.viewer;\n\t\tif (viewer) {\n\t\t\tthis.setState({\n\t\t\t\t_id:     viewer._id,\n\t\t\t\t_rev:    viewer._rev,\n\t\t\t\ticon:    viewer.icon,\n\t\t\t\ttitle:   viewer.title,\n\t\t\t\tdate:    viewer.date,\n\t\t\t\tcontent: viewer.content,\n\t\t\t\tlink:    viewer.link,\n\t\t\t\tactive:  true\n\t\t\t});\n\t\t}\n\t}\n\n\tclose = () => {\n\t\t//Close and unreference content\n\t\t//Activity inside the embedded viewer will be destroy ex: youtube player..\n\t\tthis.setState({ active: false, content: null });\n\t}\n\n\tfavorite = () => {\n\t\talert(\"Favorite not implemented.\");\n\t\treturn false;\n\t}\n\n\tshare = () => {\n\t\talert(\"Sharing not implemented.\");\n\t\treturn false;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.state.active ? 'App-Viewer active' : 'App-Viewer'}>\n\t\t\t\t<div className=\"App-Viewer-Options\">\n\t\t\t\t\t<button className=\"App-Viewer-Options-Close\" onClick={this.close}>X</button>\n\t\t\t\t\t<a target=\"_blank\" href={this.state.link}><button>OPEN</button></a>\n\t\t\t\t\t<button onClick={this.favorite}>&#9733;</button>\n\t\t\t\t\t<button onClick={this.share}>SHARE</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"App-Viewer-Title\">\n\t\t\t\t\t<h1><img src={this.state.icon} /> {this.state.title}</h1>\n\t\t\t\t\t<p>{moment.unix(this.state.date).format(\"LLLL\")}</p>\n\t\t\t\t</div>\n\n\t\t\t\t{ /* TODO: find safer way.. */}\n\t\t\t\t<div className=\"App-Viewer-Content\" dangerouslySetInnerHTML={{ __html: this.state.content }} />\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default Viewer;","import React, { Component } from 'react';\nimport { DbContext } from './Helpers/Db';\nimport './App.scss';\n\n//Components\nimport Feeds  from './Components/Feeds';\nimport List   from './Components/List';\nimport Viewer from './Components/Viewer';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tloading:    true,\n\t\t\tviewer:     null,\n\t\t\tfeeds:      [ ],\n\t\t\tfeedsItems: [ ]\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\t//Initialize persisted feeds items\n\t\tlet persistedItems = await this.context.db_feeds_items.allDocs({ include_docs: true });\n\t\t\tpersistedItems = persistedItems.rows.filter((item) => item.doc.unread === true);\n\t\t\tpersistedItems = persistedItems.map(item => item.doc);\n\n\t\t//Initialize persisted feeds\n\t\tlet persistedFeeds = await this.context.db_feeds.allDocs({ include_docs: true });\n\t\t\tpersistedFeeds = persistedFeeds.rows.map(feed => {\n\t\t\t\tfeed.doc.unread = persistedItems.filter((item) => item.feedId === feed.id);\n\t\t\t\tfeed.doc.unread = feed.doc.unread.map(item => item._id);\n\n\t\t\t\tconsole.log(`Feed ${feed.id} has ${feed.doc.unread.length} unread.`);\n\t\t\t\treturn feed.doc;\n\t\t\t});\n\n\t\tthis.setState({\n\t\t\tloading:    false,\n\t\t\tfeeds:      [...persistedFeeds],\n\t\t\tfeedsItems: [...persistedItems]\n\t\t});\n\t}\n\n\topenViewer = (item) => {\n\t\tthis.setState({ viewer: item });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Feeds  feeds={this.state.feeds} />\n\t\t\t\t<List   items={this.state.feedsItems} openViewer={this.openViewer} />\n\t\t\t\t<Viewer viewer={this.state.viewer} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nApp.contextType = DbContext;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}